import pandas as pd
import matplotlib.pyplot as plt
import csv
import os

filename = "/home/pgarcia/code/SabberStone/core-extensions/SabberStoneCoreAi/results/victories/inspyred-individuals-file-07202018-194904.csv"
files = [filename]

directory = "/home/pgarcia/code/SabberStone/core-extensions/SabberStoneCoreAi/results/victories/"
files = []

for fname in os.listdir(directory):
	if fname.startswith("inspyred-individuals"):
		files.append(directory+fname)

#filename = "/home/pgarcia/code/SabberStone/core-extensions/SabberStoneCoreAi/results/victories/inspyred-individuals-file-07202018-194904.csv"
#files = [filename]


print files


def get_age_df(filename):
	df_age = pd.DataFrame(columns=('INDIVIDUAL', 'FIRST', 'LAST'))
	df_gens = pd.DataFrame(columns=('GEN', 'INDIVIDUAL,', 'CURRENT_AGE', 'FITNESS'))
	with open(filename, 'rb') as f:
		reader = csv.reader(f)
		i = 0
		for row in reader:
			#print row
			individual =  str(row[3:24]) #complete with runID
			last_seen = int(row[0])
			current_age = 0
			#print individual
			if individual in df_age.INDIVIDUAL.values:
				#print "ALREADY IN"
				idx = df_age.index[df_age['INDIVIDUAL'] == individual]
				#print idx
				df_age.at[idx, "LAST"] = int(last_seen)
				current_age = int(row[0]) - int(df_age.loc[idx, "FIRST"])


			else:
				#print "FIRST TIME SEEN"
				df_age.loc[len(df_age)]=[individual, int(last_seen), int(last_seen)]
			df_gens.loc[len(df_gens)] = [last_seen, individual, current_age, int(row[2])]
			#print(df.head())

	print("DATAFRAME HAS "+str(len(df_age))+" DIFFERENT INDIVIDUALS")
	df_age['AGE'] = df_age['LAST'] - df_age['FIRST'] + 1
	#with pd.option_context('display.max_rows', None, 'display.max_columns', 5):
	#	print(df_age)
	return df_age, df_gens


all_dfa = pd.DataFrame()
all_dfg = pd.DataFrame()
for i, filen in enumerate(files):
	print "Reading file "+filen
	dfa, dfg = get_age_df(filen)
	dfa['RUN'] = i
	dfg['RUN'] = i
	all_dfa = all_dfa.append(dfa, ignore_index=True)
	all_dfg = all_dfg.append(dfg, ignore_index=True)


pd.set_option('display.width', 1000)
with pd.option_context('display.max_rows', None, 'display.max_columns', 5):
	#print(all_dfa)
	print(all_dfg)
print(all_dfa.head())


all_dfa[['AGE', 'FIRST', 'LAST']] = all_dfa[['AGE', 'FIRST', 'LAST']].astype(int)
print(all_dfa.dtypes)
axes_age = all_dfa.boxplot(column=['AGE', 'FIRST', 'LAST'])
axes_age.set_ylabel("Generations")
fig_ages = axes_age.get_figure()
fig_ages.savefig("age-individuals.png")


#specific_dfa = all_dfa[ all_dfa["AGE"] == 1]
#print(specific_dfa.head())

#PLOTTING INFO BY GENERATION
specific_dfg = all_dfg[ all_dfg["GEN"]%5 == 0]
axes_dfg = specific_dfg.boxplot(column="CURRENT_AGE", by="GEN")
axes_dfg.set_ylabel("Age")
axes_dfg.set_title("Age of individuals in each generation (all runs)")
fig_dfg = axes_dfg.get_figure()
fig_dfg.suptitle('') #This removes the "Boxplot grouped by" generated by Pandas
fig_dfg.savefig("age-generations.png")

axes_fitness = specific_dfg.boxplot(column="FITNESS", by="GEN")
axes_fitness.set_ylabel("Fitness")
axes_fitness.set_title("Fitness of individuals in each generation (all runs)")
fig_fitness = axes_fitness.get_figure()
fig_fitness.suptitle('')
fig_fitness.savefig("fitness-generations.png")



